version: "3.3"

services:
  mysqldb:
    container_name: mysqldb
    build:
      context: ./seoul-competition-mysql
      dockerfile: Dockerfile
    image: mysql
    restart: always
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
      - "--default-authentication-plugin=mysql_native_password"
    volumes:
      - ./seoul-competition-mysql/db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: "Asia/Seoul"
    networks:
      - server-network

  springboot:
    container_name: springboot
    build:
      context: ./seoul-competition-backend
      dockerfile: Dockerfile
    restart: always
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_FIFTY: ${SPRING_FIFTY}
      SPRING_SENIOR: ${SPRING_SENIOR}
      SPRING_API_KEY: ${SPRING_API_KEY}
      JAVA_OPTS: ${JAVA_OPTS}
      JAVA_TOOL_OPTIONS: ${JAVA_TOOL_OPTIONS}
      TZ: "Asia/Seoul"
    depends_on:
      - mysqldb
    networks:
      - server-network

  fastapi:
    container_name: fastapi
    build:
      context: ./seoul-competition-ai
      dockerfile: Dockerfile
    volumes:
      - ./seoul-competition-ai:/usr/src/fastapi
    restart: always
    environment:
      FASTAPI_API_DOMAIN: ${FASTAPI_API_DOMAIN}
      FASTAPI_API_URL: ${FASTAPI_API_URL}
      FASTAPI_OPENAI_KEY: ${FASTAPI_OPENAI_KEY}
      TZ: "Asia/Seoul"
    depends_on:
      - springboot
    networks:
      - server-network

  nextjs:
    container_name: nextjs
    restart: "always"
    build:
      context: ./seoul-competition-frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_ENV_API_DOMAIN: ${NEXT_PUBLIC_ENV_API_DOMAIN}
        NEXT_PUBLIC_ENV_API_URL: ${NEXT_PUBLIC_ENV_API_URL}
        NEXT_PUBLIC_ENV_DOMAIN: ${NEXT_PUBLIC_ENV_DOMAIN}
    environment:
      TZ: "Asia/Seoul"
    volumes:
      - "./seoul-competition-frontend:/usr/src/nextjs"
      - "/usr/src/nextjs"
    networks:
      - server-network

  nginx:
    container_name: nginx
    restart: "always"
    build:
      context: ./seoul-competition-nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./seoul-competition-nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      NGINX_HOST: ${NGINX_HOST}
      NGINX_PORT: ${NGINX_PORT}
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME}
      NGINX_SSL_CERTIFICATE: ${NGINX_SSL_CERTIFICATE}
      NGINX_SSL_CERTIFICATE_KEY: ${NGINX_SSL_CERTIFICATE_KEY}
      NGINX_SSL_TRUSTED_CERTIFICATE: ${NGINX_SSL_TRUSTED_CERTIFICATE}
      TZ: "Asia/Seoul"
    depends_on:
      - nextjs
      - springboot
      - mysqldb
      - fastapi
    networks:
      - server-network

networks:
  server-network:
