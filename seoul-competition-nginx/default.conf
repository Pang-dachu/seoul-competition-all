# 캐싱 관리를 위한 설정
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=60m use_temp_path=off;

upstream nextjs_upstream {
    server nextjs:3000;
}

upstream springboot_upstream {
    server springboot:8080;
}

server {
    listen 80;
    server_name www.seniorplus.site;
    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }

    location /.well-known/acme-challenge {
        root /var/lib/letsencrypt/;
    }
}

server {
    listen 443 ssl;
    server_name www.seniorplus.site;

    # # 로그 파일 설정
    # access_log /var/log/nginx/reverse-access.log
    # error_log /var/log/nginx/reverse-error.log

    # sendfile 시스템 호출을 사용하여 파일 전송
    # sendfile on;
    # 디렉토리에 있는 파일 목록을 자동 생성하여 표시
    # autoindex on;
    # # TCP 버퍼링을 최적화하여 데이터 전송 성능을 향상
    # tcp_nopush on;
    # Nagle 알고리즘을 비활성화하여 패킷을 지연없이 빠르게 전송
    # tcp_nodelay on;
    # # HTTP keep-alive 연결의 최대 유지 시간을 65초로 설정
    # keepalive_timeout 65;
    # 파일 확장자에 대한 해시 테이블의 최대 크기를 2048개로 설정
    # # types_hash_max_size 2048;


    #! SSL 인증서와 개인 키 파일 경로 설정
    ssl_certificate /etc/letsencrypt/live/www.seniorplus.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.seniorplus.site/privkey.pem;

    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_prefer_server_ciphers on;
    # ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    # ssl_ecdh_curve secp384r1;
    # ssl_session_timeout 10m;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_tickets off;
    # ssl_stapling on;
    # ssl_stapling_verify on;


    # gzip compression 설정
    gzip on;
    # 클라이언트에게 gzip으로 응답하는 설정
    gzip_proxied any;
    # gzip의 강도? cpu 부하 영향
    gzip_comp_level 2;
    # gzip 압축을 적용할 최소 응답 크기 설정
    gzip_min_length 256;
    # gzip 압축이 적용된 응답에 Vary 헤더 포함
    gzip_vary on;
    # gzip을 할 확장자
    gzip_types application/javascript text/css text/xml text/plain application/x-javascript application/xml application/xml+rss;


    location /api {
        proxy_pass         http://springboot_upstream;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection 'upgrade';
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_cache_bypass $http_upgrade;
    }

    location / {
        proxy_pass         http://nextjs_upstream;
        proxy_http_version 1.1;
        proxy_set_header   Connection "Upgrade";
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_cache_bypass $http_upgrade;

        # 클라이언트 요청 바디의 최대 허용 크기 설정
        client_max_body_size 10m;
        # 클라이언트 요청 바디를 읽는 버퍼 크기 설정. 기본값 8k
        client_body_buffer_size 128k;

        # 프록시 서버와의 연결 시도 시간 초과 설정
        proxy_connect_timeout 90;
        # 프록시 서버로의 데이터 전송 시간 초과 설정
        proxy_send_timeout 90;
        # 프록시 서버로부터 데이터 수신 시간 초과 설정
        proxy_read_timeout 90;
        # 프록시 서버의 버퍼 크기 설정
        proxy_buffer_size 4k;
        # 프록시 서버의 버퍼 개수와 각 버퍼의 크기 설정
        proxy_buffers 4 32k;
        # 프록시 서버에서 사용 중인 버퍼의 최대 크기 설정
        proxy_busy_buffers_size 64k;
        # 프록시 서버에 임시 파일을 쓰는 버퍼의 크기 설정
        proxy_temp_file_write_size 64k;
    }
}
